---
#
# Playbook that sets up ELK stack on Buster base VM
#
- hosts: elastic.chacal.fi
  become: true

  vars_files:
    - secrets.yml

  vars:
    - aws_cli_user: root
    - aws_access_key_id: "{{ chacal.aws.home_infra_certbot.access_key }}"
    - aws_secret_access_key: "{{ chacal.aws.home_infra_certbot.secret_key }}"

  roles:
    - role: elastic.elasticsearch
      es_version: 7.6.2
      es_heap_size: 3g
      es_config:
        network.host: 0.0.0.0
        discovery.seed_hosts: "{{ ansible_default_ipv4.address }}"
        cluster.initial_master_nodes: "{{ ansible_default_ipv4.address }}"
      es_path_repo: /srv/elastic_snapshots
      es_jvm_custom_parameters:
        - "-Xlog:disable"      # Disable JVM GC logging

    - role: filebeat
      filebeat_elasticsearch_hosts:
        - elastic.chacal.fi
      filebeat_exclude_files:
        - "/var/log/elasticsearch/elasticsearch_deprecation*"

    - role: debian_common
      unattended_upgrades_origins: '"o=elastic";'

    - role: prometheus_node_exporter
    - role: self_monitoring

    - role: certbot-dns-route53
      certbot_email: "{{ chacal.certbot.email }}"

    - role: kibana
      kibana_ssl_cert_path: "/etc/kibana/fullchain.pem"
      kibana_ssl_key_path: "/etc/kibana/privkey.pem"

  tasks:
    - name: Install certbot deploy-hook to copy generated certificates
      copy:
        dest: /etc/letsencrypt/renewal-hooks/deploy/10-kibana.sh
        content: |
          #!/bin/bash
          echo "Updating Kibana certificates with certbot deploy-hook.."
          cp /etc/letsencrypt/live/elastic.chacal.fi/fullchain.pem /etc/kibana/
          cp /etc/letsencrypt/live/elastic.chacal.fi/privkey.pem /etc/kibana/
          chown kibana:kibana /etc/kibana/*.pem
          systemctl restart kibana.service
          echo "Kibana certificates updated and Kibana restarted"
        mode: "755"

    - name: Ensure Kibana certs are copied to /etc/kibana for the first time
      command:
        cmd: /etc/letsencrypt/renewal-hooks/deploy/10-kibana.sh
        creates: /etc/kibana/fullchain.pem

    - name: Create /srv
      file:
        path: "/srv"
        state: directory
      tags: elastic_search

    - name: Create Elasticsearch snapshot directory
      file:
        path: "/srv/elastic_snapshots"
        state: directory
        owner: elasticsearch
        group: elasticsearch
      tags: elastic_search

    - meta: flush_handlers

    - name: Create local snapshot repository
      uri:
        url: "http://{{ inventory_hostname }}:9200/_snapshot/local_repository"
        method: PUT
        body: |
          {
            "type": "fs",
            "settings": {
              "location": "/srv/elastic_snapshots"
            }
          }
        status_code: 200
        body_format: json
      tags: elastic_search

    - name: Configure snapshot policy
      uri:
        url: "http://{{ inventory_hostname }}:9200/_slm/policy/local_snapshots"
        method: PUT
        body: |
          {
            "schedule": "0 30 1/6 * * ?",
            "name": "<elastic-snap-{now/m{yyyyMMdd-HHmm|Europe/Helsinki}}>",
            "repository": "local_repository",
            "config": {
              "indices": ["*"]
            },
            "retention": {
              "expire_after": "90d",
              "min_count": 10,
              "max_count": 100
            }
          }
        status_code: 200
        body_format: json
      tags: elastic_search
