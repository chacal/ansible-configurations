---
#
# Playbook that sets up PostgreSQL and Home Assistant on homeassistant.chacal.fi
#
- hosts: homeassistant.chacal.fi
  remote_user: jihartik
  become: true

  vars_files:
    - secrets.yml

  vars:
    docker_custom_registry: "https://docker-registry.chacal.fi"
    aws_cli_user: root
    aws_access_key_id: "{{ chacal.aws.home_infra_certbot.access_key }}"
    aws_secret_access_key: "{{ chacal.aws.home_infra_certbot.secret_key }}"
    ha_environment_sensors:
      - tag: S201
        name: Kids room
      - tag: S202
        name: Study
      - tag: S203
        name: Master bedroom
      - tag: S204
        name: Bathroom
      - tag: S206
        name: Livingroom
      - tag: S208
        name: Storage
      - tag: S209
        name: Guestroom
      - tag: S210
        name: Ventilation, outside air
      - tag: S211
        name: Ventilation, pre-heated air
      - tag: S212
        name: WC, downstairs
      - tag: S213
        name: Outside, balcony
      - tag: S214
        name: Sauna
      - tag: S215
        name: Car
      - tag: S222
        name: Outside, backyard
    ha_motion_sensors:
      - tag: P301
        name: Storage
      - tag: P302
        name: WC, downstairs
      - tag: P303
        name: WC, downstairs
      - tag: P304
        name: WC, downstairs
      - tag: P306
        name: WC, downstairs
      - tag: P307
        name: WC, upstairs
      - tag: P308
        name: WC, upstairs
      - tag: P309
        name: Storage

  handlers:
    - name: Restart Home Assistant
      service: name=home-assistant state=restarted
    - name: Restart HAProxy
      service: name=haproxy state=restarted

  roles:
    - role: filebeat
      filebeat_elasticsearch_hosts:
        - elastic.chacal.fi
    - role: debian_common
      unattended_upgrades_origins: '"o=elastic";"o=Docker";'
    - role: prometheus_node_exporter
    - role: self_monitoring
    - role: ouroboros
      ouroboros_notifier: "sendgrid://{{ chacal.sendgrid.ouroboros }}:root@{{ inventory_hostname }}/{{ chacal.ouroboros.email }}"
    - role: duplicacy
      duplicacy_filters: |
        +srv/
        +srv/postgres/*
        +srv/home-assistant/*
        -*
      duplicacy_backup_hours: "1,13"
      duplicacy_prune_hours: "1,13"
      duplicacy_prune_minutes: "45"
      duplicacy_encryption_key: "{{ chacal.ha.duplicacy.encryption_key }}"
      duplicacy_environment:
        DUPLICACY_B2_ID: "{{ chacal.ha.duplicacy.b2_id }}"
        DUPLICACY_B2_KEY: "{{ chacal.ha.duplicacy.b2_key }}"
      tags: duplicacy

  tasks:
    #
    #  Install PostgreSQL
    #
    - name: Create PostgreSQL data directory
      file: path=/srv/postgres state=directory
      tags: postgres

    - name: Install PostgreSQL
      include_role:
        name: docker-app
      vars:
        docker_regular_user: "{{ ansible_user }}"
        docker_app_name: "postgres"
        docker_app_container_name: "postgres:12"
        docker_app_extra_params: "-v /srv/postgres:/var/lib/postgresql/data"
        docker_app_ports:
          - "127.0.0.1:5432:5432"
        docker_app_env:
          - "POSTGRES_USER=ha"
          - "POSTGRES_DB=ha"
          - "POSTGRES_PASSWORD={{ chacal.ha.postgres.password }}"
      tags: postgres

    #
    #  Install Home Assistant
    #
    - name: Create Home Assistant data directory
      file: path=/srv/home-assistant state=directory
      tags: home-assistant

    - name: Provision HA secrets
      template: src=./conf/homeassistant.chacal.fi/secrets.yaml.j2 dest=/srv/home-assistant/secrets.yaml mode=0600
      notify: Restart Home Assistant
      tags: home-assistant

    - name: Copy Home Assistant configuration file
      template:
        src: ./conf/homeassistant.chacal.fi/ha-configuration.yaml
        dest: /srv/home-assistant/configuration.yaml
        variable_start_string: '[['
        variable_end_string: ']]'
      notify: Restart Home Assistant
      tags: home-assistant

    - name: Copy Home Assistant automations file
      copy: src=./conf/homeassistant.chacal.fi/ha-automations.yaml dest=/srv/home-assistant/automations.yaml
      notify: Restart Home Assistant
      tags: home-assistant

    - name: Copy Home Assistant scenes file
      copy: src=./conf/homeassistant.chacal.fi/ha-scenes.yaml dest=/srv/home-assistant/scenes.yaml
      notify: Restart Home Assistant
      tags: home-assistant

    - name: Copy Home Assistant Kiosk dashboard file
      template:
        src: ./conf/homeassistant.chacal.fi/ha-dashboard-kiosk2.yaml
        dest: /srv/home-assistant/dashboard-kiosk2.yaml
        variable_start_string: '[['
        variable_end_string: ']]'
      notify: Restart Home Assistant
      tags: home-assistant

    - name: Create empty group and script configs
      file: path=/srv/home-assistant/{{ item }} state=touch
      loop:
        - groups.yaml
        - scripts.yaml
      changed_when: False
      tags: home-assistant

    - name: Create Home Assistant custom_components directory
      file: path=/srv/home-assistant/custom_components state=directory
      tags: home-assistant

    - name: Install Mount Kelvin integration
      git:
        repo: https://github.com/chacal/ha_mount_kelvin_integration.git
        dest: /srv/home-assistant/custom_components/mount_kelvin
        force: yes
        version: master
      register: mount_kelvin_git_pull
      tags: home-assistant

    - name: Install Home Assistant
      include_role:
        name: docker-app
      vars:
        docker_regular_user: "{{ ansible_user }}"
        docker_app_name: "home-assistant"
        docker_app_container_name: "homeassistant/home-assistant:stable"
        docker_app_extra_params: "--net=host -v /srv/home-assistant:/config"
        docker_app_env:
          - TZ=Europe/Helsinki
      tags: home-assistant

    - name: Restart Home Assistant
      service: name=home-assistant state=restarted enabled=yes
      when: mount_kelvin_git_pull.changed
      tags: home-assistant

    - name: Create letsencrypt certificate
      include_role:
        name: certbot-dns-route53
      vars:
        certbot_email: "{{ chacal.certbot.email }}"
        certbot_certificate_domains:
          - homeassistant.chacal.fi
          - ha.chacal.fi
        certbot_deploy_hook: |
          #!/bin/bash
          echo "Updating haproxy certificates with certbot deploy-hook.."
          cat /etc/letsencrypt/live/homeassistant.chacal.fi/fullchain.pem /etc/letsencrypt/live/homeassistant.chacal.fi/privkey.pem > \
          /etc/haproxy/letsencrypt-chain.pem
          chmod 600 /etc/haproxy/letsencrypt-chain.pem
          systemctl restart haproxy
          echo "Certificates updated"
      tags: certbot

    - name: Install HAProxy
      apt:
        state: latest
        pkg:
          - haproxy
      tags: haproxy

    - name: Create HAProxy configuration
      copy:
        dest: /etc/haproxy/haproxy.cfg
        content: |
          global
              log /dev/log    local0
              log /dev/log    local1 notice
              chroot /var/lib/haproxy
              user haproxy
              group haproxy
              daemon

              # Default SSL material locations
              ca-base /etc/ssl/certs
              crt-base /etc/ssl/private

              # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
              ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
              ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
              ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
              tune.ssl.default-dh-param 2048

          defaults
              mode http
              timeout connect 5s
              timeout client 10s
              timeout client-fin 30s
              timeout server 30s
              timeout tunnel  1h    # timeout to use with WebSocket and CONNECT

              errorfile 400 /etc/haproxy/errors/400.http
              errorfile 403 /etc/haproxy/errors/403.http
              errorfile 408 /etc/haproxy/errors/408.http
              errorfile 500 /etc/haproxy/errors/500.http
              errorfile 502 /etc/haproxy/errors/502.http
              errorfile 503 /etc/haproxy/errors/503.http
              errorfile 504 /etc/haproxy/errors/504.http

          frontend http-in
              bind *:80
              bind *:443 ssl crt /etc/haproxy/letsencrypt-chain.pem alpn h2,http/1.1
              redirect scheme https code 301 if !{ ssl_fc }
              http-response set-header Strict-Transport-Security max-age=63072000

              default_backend homeassistant

          backend homeassistant
              option httpchk GET /
              server homeassistant1 localhost:8123 check
      notify: Restart HAProxy
      tags: haproxy