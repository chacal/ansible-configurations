
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

http:
  use_x_forwarded_for: true
  # You must set the trusted proxy IP address so that Home Assistant will properly accept connections
  # Set this to your NGINX machine IP, or localhost if hosted on the same machine.
  trusted_proxies: 10.50.102.2

recorder:
  purge_keep_days: 180
  db_url: !secret recorder_db_url
  db_max_retries: 30
  db_retry_wait: 10
  exclude:
    entity_globs:
      - sensor.rssi_*
      - sensor.vcc_*
      - sun.*
    entities:
      - sensor.energy_use_in_last_2_minutes
      - sensor.energy_consumption
      - sensor.electric_power

homeassistant:
  external_url: https://ha.chacal.fi
  customize:
{% for sensor in ha_environment_sensors %}
    sensor.temperature_[[ sensor.tag | lower ]]:
      friendly_name: "[[ sensor.name ]] ([[ sensor.tag ]])"
    sensor.humidity_[[ sensor.tag | lower ]]:
      friendly_name: "[[ sensor.name ]] ([[ sensor.tag ]])"
    sensor.pressure_[[ sensor.tag | lower ]]:
      friendly_name: "[[ sensor.name ]] ([[ sensor.tag ]])"
    sensor.vcc_[[ sensor.tag | lower ]]:
      friendly_name: "[[ sensor.name ]] ([[ sensor.tag ]])"
    sensor.rssi_[[ sensor.tag | lower ]]:
      friendly_name: "[[ sensor.name ]] ([[ sensor.tag ]])"
{% endfor %}
{% for motion_sensor in ha_motion_sensors %}
    binary_sensor.motion_[[ motion_sensor.tag | lower ]]:
      friendly_name: "[[ motion_sensor.name ]] ([[ motion_sensor.tag ]])"
    sensor.vcc_[[ motion_sensor.tag | lower ]]:
      friendly_name: "[[ motion_sensor.name ]] ([[ motion_sensor.tag ]])"
    sensor.rssi_[[ motion_sensor.tag | lower ]]:
      friendly_name: "[[ motion_sensor.name ]] ([[ motion_sensor.tag ]])"
{% endfor %}

lovelace:
  mode: storage
  dashboards:
    lovelace-yaml:
      mode: yaml
      title: Kiosk2
      icon: mdi:tablet-dashboard
      show_in_sidebar: true
      filename: dashboard-kiosk2.yaml

mqtt:
  broker: mqtt-home.chacal.fi
  port: 8883
  client_id: homeassistant
  username: !secret mqtt_username
  password: !secret mqtt_password
  certificate: /etc/ssl/certs/ca-certificates.crt

mount_kelvin:
  api_key: !secret houm_api_key

notify:
  - name: Slack
    platform: slack
    api_key: !secret slack_api_key
    default_channel: '#homeassistant'

switch:
  - platform: rest
    resource: http://esp-433-gateway.chacal.fi/transmit/a/1/1
    name: Guest room table light
    is_on_template: '{{ value_json.state }}'
    body_on: '{"state":true}'
    body_off: '{"state":false}'
    headers:
      Content-Type: application/json
  - platform: rest
    resource: http://esp-433-gateway.chacal.fi/transmit/c/1/1
    name: Stair light
    is_on_template: '{{ value_json.state }}'
    body_on: '{"state":true}'
    body_off: '{"state":false}'
    headers:
      Content-Type: application/json
  - platform: rest
    resource: http://esp-433-gateway.chacal.fi/transmit/a/1/3
    name: Balcony light
    is_on_template: '{{ value_json.state }}'
    body_on: '{"state":true}'
    body_off: '{"state":false}'
    headers:
      Content-Type: application/json
  - platform: rest
    resource: http://esp-433-gateway.chacal.fi/transmit/a/1/2
    name: Front porch light
    is_on_template: '{{ value_json.state }}'
    body_on: '{"state":true}'
    body_off: '{"state":false}'
    headers:
      Content-Type: application/json
  - platform: rest
    resource: http://esp-433-gateway.chacal.fi/transmit/b/1/1
    name: Children Christmas light
    is_on_template: '{{ value_json.state }}'
    body_on: '{"state":true}'
    body_off: '{"state":false}'
    headers:
      Content-Type: application/json

light:
  - platform: switch
    name: Stair Christmas Light
    entity_id: switch.stair_light
  - platform: switch
    name: Balcony Christmas Light
    entity_id: switch.balcony_light
  - platform: switch
    name: Front Porch Christmas Light
    entity_id: switch.front_porch_light
  - platform: switch
    name: Guest Room Table Light
    entity_id: switch.guest_room_table_light
  - platform: switch
    name: Children Christmas Light
    entity_id: switch.children_christmas_light

binary_sensor:
{% for sensor in ha_motion_sensors %}
  - platform: mqtt
    name: "motion_[[ sensor.tag | lower ]]"
    unique_id: "motion_[[ sensor.tag | lower ]]"
    state_topic: '/sensor/[[ sensor.tag ]]/k/state'
    value_template: '{{ value_json.motionDetected }}'
    payload_on: true
    payload_off: false
    device_class: motion
    expire_after: 180
{% endfor %}

ios:

sensor:
{% for sensor in ha_environment_sensors %}
  - name: "temperature_[[ sensor.tag | lower ]]"
    platform: mqtt
    state_topic: "/sensor/[[ sensor.tag ]]/m/state"
    unique_id: "temperature_[[ sensor.tag | lower ]]"
    unit_of_measurement: "Â°C"
    value_template: "{{ value_json.temperature | round(1) }}"
    expire_after: 180
    device_class: temperature
  - name: "humidity_[[ sensor.tag | lower ]]"
    platform: mqtt
    state_topic: "/sensor/[[ sensor.tag ]]/m/state"
    unique_id: "humidity_[[ sensor.tag | lower ]]"
    unit_of_measurement: "%"
    value_template: "{{ value_json.humidity | round(0) }}"
    expire_after: 180
    device_class: humidity
  - name: "pressure_[[ sensor.tag | lower ]]"
    platform: mqtt
    state_topic: "/sensor/[[ sensor.tag ]]/m/state"
    unique_id: "pressure_[[ sensor.tag | lower ]]"
    unit_of_measurement: "mbar"
    value_template: "{{ value_json.pressure | round(0) }}"
    expire_after: 180
    device_class: pressure
  - name: "vcc_[[ sensor.tag | lower ]]"
    platform: mqtt
    state_topic: "/sensor/[[ sensor.tag ]]/m/state"
    unique_id: "vcc_[[ sensor.tag | lower ]]"
    unit_of_measurement: "V"
    value_template: "{{ value_json.vcc / 1000 }}"
    icon: "mdi:battery-outline"
    expire_after: 180
    device_class: voltage
  - name: "rssi_[[ sensor.tag | lower ]]"
    platform: mqtt
    state_topic: "/sensor/[[ sensor.tag ]]/m/state"
    unique_id: "rssi_[[ sensor.tag | lower ]]"
    unit_of_measurement: "dBm"
    value_template: "{{ value_json.rssi }}"
    expire_after: 180
    device_class: signal_strength
{% endfor %}
{% for sensor in ha_motion_sensors %}
  - name: "vcc_[[ sensor.tag | lower ]]"
    platform: mqtt
    state_topic: "/sensor/[[ sensor.tag ]]/k/state"
    unique_id: "vcc_[[ sensor.tag | lower ]]"
    unit_of_measurement: "V"
    value_template: "{{ value_json.vcc / 1000 }}"
    icon: "mdi:battery-outline"
    expire_after: 180
    device_class: voltage
  - name: "rssi_[[ sensor.tag | lower ]]"
    platform: mqtt
    state_topic: "/sensor/[[ sensor.tag ]]/k/state"
    unique_id: "rssi_[[ sensor.tag | lower ]]"
    unit_of_measurement: "dBm"
    value_template: "{{ value_json.rssi }}"
    expire_after: 180
    device_class: signal_strength
{% endfor %}
  - platform: mqtt
    name: "Energy consumption"
    state_topic: "/sensor/I100/e/state"
    unit_of_measurement: "kWh"
    unique_id: "energy_i100"
    value_template: "{{ value_json.energyAmount / 1000 }}"
    device_class: "energy"
    state_class: "total_increasing"
  - platform: filter
    name: "Energy consumption throttled"
    entity_id: sensor.energy_consumption
    filters:
      - filter: time_throttle
        window_size: '00:01:00'
        precision: 4
  - platform: statistics
    name: "Energy use in last 2 minutes"
    entity_id: sensor.energy_consumption
    state_characteristic: change
    max_age:
      minutes: 2
    sampling_size: 400
    precision: 4
  - platform: mqtt
    name: "Electricity price"
    state_topic: "/nordpool/current_price"
    unique_id: "electricity_price"
    unit_of_measurement: "c/kWh"
    value_template: "{{ value_json.price | round(1) }}"
    device_class: "monetary"
  - platform: mqtt
    name: "Electricity price"
    state_topic: "/nordpool/current_price"
    unique_id: "electricity_price_eur_kwh"
    unit_of_measurement: "EUR/kWh"
    value_template: "{{ (value_json.price / 100) | round(3) }}"
    device_class: "monetary"

template:
  - sensor:
    - name: Sunrise
      unique_id: sunrise_time
      state: "{{ as_timestamp(state_attr('sun.sun', 'next_rising')) | timestamp_custom('%H:%M') }}"
      icon: mdi:weather-sunset-up
    - name: Sunset
      unique_id: sunset_time
      state: "{{ as_timestamp(state_attr('sun.sun', 'next_setting')) | timestamp_custom('%H:%M') }}"
      icon: mdi:weather-sunset-down
    - name: "Electric power"
      unit_of_measurement: kW
      device_class: power
      state: "{{ (states('sensor.energy_use_in_last_2_minutes') | float(0) * 30) | round(1) }}"


utility_meter:
  daily_energy:
    name: Electricity used (daily)
    source: sensor.energy_consumption_throttled
    cycle: daily
  mmonthly_energy:
    name: Electricity used (monthly)
    source: sensor.energy_consumption_throttled
    cycle: monthly
