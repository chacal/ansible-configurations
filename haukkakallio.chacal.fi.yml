---
#
# Playbook that sets up Mosquitto and mqtt-houm-gw on haukkakallio.chacal.fi
#
- hosts: haukkakallio.chacal.fi
  remote_user: jihartik
  become: true

  vars_files:
    - secrets.yml

  vars:
    - aws_cli_user: root
    - aws_access_key_id: "{{ chacal.aws.home_infra_certbot.access_key }}"
    - aws_secret_access_key: "{{ chacal.aws.home_infra_certbot.secret_key }}"
    - docker_custom_registry: "https://docker-registry.chacal.fi"

  roles:
    - role: filebeat
      filebeat_elasticsearch_hosts:
        - elastic.chacal.fi
    - role: debian_common
      unattended_upgrades_origins: '"o=elastic";"o=Docker";'
    - role: prometheus_node_exporter
    - role: self_monitoring
    - role: ouroboros
      ouroboros_notifier: "sendgrid://{{ chacal.sendgrid.ouroboros }}:root@{{ inventory_hostname }}/{{ chacal.ouroboros.email }}"
    - name: certbot-dns-route53
      certbot_email: "{{ chacal.certbot.email }}"
      certbot_certificate_domains:
        - haukkakallio.chacal.fi
        - mqtt-home.chacal.fi
      certbot_deploy_hook: |
        #!/bin/bash
        echo "Restarting mosquitto due to updated certificates.."
        systemctl restart mosquitto || true
      tags: certbot
    - role: duplicacy
      duplicacy_filters: |
        +srv/
        +srv/unifi/*
        -*
      duplicacy_backup_hours: "1,13"
      duplicacy_encryption_key: "{{ chacal.haukkakallio.duplicacy.encryption_key }}"
      duplicacy_environment:
        DUPLICACY_B2_ID: "{{ chacal.haukkakallio.duplicacy.b2_id }}"
        DUPLICACY_B2_KEY: "{{ chacal.haukkakallio.duplicacy.b2_key }}"

    - name: mqtt-server
      mqtt_server_config: |
        log_dest syslog
        log_type none
        log_type error
        log_type warning
        log_type notice
        autosave_interval 60
        max_queued_messages 500000
        password_file {{ mqtt_server_password_file }}
        acl_file {{ mqtt_server_acl_file }}
        persistent_client_expiration 14d

        allow_anonymous false

        # Listen for plain text connections only on localhost
        listener 1883 localhost

        listener 8883
        cafile /etc/letsencrypt/live/haukkakallio.chacal.fi/chain.pem
        certfile /etc/letsencrypt/live/haukkakallio.chacal.fi/cert.pem
        keyfile /etc/letsencrypt/live/haukkakallio.chacal.fi/privkey.pem
        tls_version tlsv1.2

        listener 9883
        protocol websockets
        cafile /etc/letsencrypt/live/haukkakallio.chacal.fi/chain.pem
        certfile /etc/letsencrypt/live/haukkakallio.chacal.fi/cert.pem
        keyfile /etc/letsencrypt/live/haukkakallio.chacal.fi/privkey.pem
        tls_version tlsv1.2

        connection sensor-backend
        address sensor-backend.chacal.fi:8883
        topic /sensor/# out 1 "" ""
        remote_username {{ chacal.sensor_backend.mqtt_users[0].username }}
        remote_password {{ chacal.sensor_backend.mqtt_users[0].password }}
        bridge_tls_version tlsv1.2
        bridge_capath /etc/ssl/certs
      mqtt_server_users: "{{ chacal.haukkakallio.mqtt_users }}"
      mqtt_server_acl_config: |
        user {{ chacal.haukkakallio.mqtt_users[0].username }}
        topic readwrite #
        user {{ chacal.haukkakallio.mqtt_users[1].username }}
        topic readwrite /bt-sensor-gw/#
        user {{ chacal.haukkakallio.mqtt_users[2].username }}
        topic readwrite /sensor/#
        topic read /bt-sensor-gw/#
        user {{ chacal.haukkakallio.mqtt_users[3].username }}
        topic readwrite /sensor/#
        user {{ chacal.haukkakallio.mqtt_users[4].username }}
        topic read /sensor/#
        user {{ chacal.haukkakallio.mqtt_users[5].username }}
        topic readwrite /sensor/#
      tags: mosquitto

  tasks:
    - name: Create mqtt-houm-gw data directory
      file:
        path: /srv/mqtt-houm-gw
        state: directory
        mode: 0750
        owner: 1000       # Node user has UID 1000 in the  container
      tags: mqtt-houm-gw

    - name: Install mqtt-houm-gw docker service
      include_role:
        name: docker-app
      vars:
        docker_regular_user: "{{ ansible_user }}"
        docker_app_name: "mqtt-houm-gw"
        docker_app_container_name: "jihartik/mqtt-houm-gw"
        docker_app_extra_params: "--network host --init -v /srv/mqtt-houm-gw:/state"
        docker_app_ports:
          - 5555:5555/udp
          - 4000:4000
        docker_app_env:
          - "HOUM_SITE_KEY={{ chacal.houm.site_key }}"
          - "CAR_HEATER_STATE_FILE=/state/car_heater_state.json"
          - "CAR_HEATER_PUBLIC_DIR=/opt/app/public"
          - "MQTT_BROKER=mqtts://mqtt-home.chacal.fi"
          - "MQTT_USERNAME={{ chacal.haukkakallio.mqtt_users[5].username }}"
          - "MQTT_PASSWORD={{ chacal.haukkakallio.mqtt_users[5].password }}"
      tags: mqtt-houm-gw

    - name: Install bt-sensor-mqtt-decoder docker service
      include_role:
        name: docker-app
      vars:
        docker_regular_user: "{{ ansible_user }}"
        docker_app_name: "bt-sensor-mqtt-decoder"
        docker_app_container_name: "jihartik/bt-sensor-mqtt-decoder"
        docker_app_env:
          - "MQTT_BROKER=mqtts://mqtt-home.chacal.fi"
          - "MQTT_USERNAME={{ chacal.haukkakallio.mqtt_users[2].username }}"
          - "MQTT_PASSWORD={{ chacal.haukkakallio.mqtt_users[2].password }}"
      tags: bt-sensor-mqtt-decoder

    - name: Create Unifi controller data directory
      file:
        path: /srv/unifi
        state: directory
        mode: 0750
        owner: 1000
      tags: unifi

    - name: Install Unifi controller
      include_role:
        name: docker-app
      vars:
        docker_regular_user: "{{ ansible_user }}"
        docker_app_name: "unifi"
        docker_app_container_name: "jacobalberty/unifi:stable"
        docker_app_extra_params: "-v /srv/unifi:/unifi"
        docker_app_env:
          - "RUNAS_UID0=false"
          - "UNIFI_UID=1000"
          - "UNIFI_GID=1000"
          - "TZ='Europe/Helsinki'"
        docker_app_ports:
          - 8080:8080
          - 8443:8443
          - 3478:3478
          - 10001:10001/udp
      tags: unifi

