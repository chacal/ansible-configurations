---
- hosts: all
  remote_user: jihartik
  gather_facts: yes
  become: yes

  handlers:
    - include: ../../handlers/handlers.yml

  vars:
    - timezone: Europe/Helsinki

  vars_files:
    - secrets.yml

  roles:

  tasks:
    - name: Add default user to sudo group
      lineinfile:
        name: /etc/sudoers
        state: present
        regexp: '^{{ ansible_ssh_user }}\s'
        line: '{{ ansible_ssh_user }} ALL=(ALL) NOPASSWD: ALL'

    - name: Install/update dependencies
      apt: pkg={{ item }} state=latest
      with_items:
        - python-pip
        - python3-dev
        - python-setuptools
        - mosquitto
        - mosquitto-clients
        - postgresql-9.5
        - postgresql-server-dev-9.5
        - python-psycopg2

    - name: Provision the PostgreSQL user
      postgresql_user: name=ha password=homeassistant
      become_user: postgres

    - name: Provision the HA database
      postgresql_db: name=ha owner=ha
      become_user: postgres

    - name: Install virtualenv
      pip: name=virtualenv state=latest

    - name: Add user for Home Assistant
      user: name=homeassistant system=yes

    - name: Create HA installation directory
      file: path=/srv/homeassistant state=directory mode=0755 owner=homeassistant

    - name: Install psycopg2
      pip: name=psycopg2 state=latest virtualenv=/srv/homeassistant virtualenv_python=python3
      become: true
      become_user: homeassistant

    - name: Install Home Assistant
      pip: name=homeassistant state=latest virtualenv=/srv/homeassistant virtualenv_python=python3
      become: true
      become_user: homeassistant

    - name: Copy systemd unit file
      copy:
        dest: /etc/systemd/system/home-assistant.service
        content: |
          [Unit]
          Description=Home Assistant
          After=network.target

          [Service]
          Type=simple
          User=homeassistant
          #make sure the virtualenv python binary is used
          Environment=VIRTUAL_ENV="/srv/homeassistant"
          Environment=PATH="$VIRTUAL_ENV/bin:$PATH"
          ExecStart=/srv/homeassistant/bin/hass -c "/home/homeassistant/.homeassistant"
          Restart=always

          [Install]
          WantedBy=multi-user.target
      register: unit_file

    - name: Create HA configuration directory
      file: path=/home/homeassistant/.homeassistant state=directory mode=0755 owner=homeassistant

    - name: Copy configuration file
      copy: dest=/home/homeassistant/.homeassistant/configuration.yaml src=./conf/ha-configuration.yaml owner=homeassistant

    - name: Set Slack API key to configuration file
      lineinfile:
        name: /home/homeassistant/.homeassistant/configuration.yaml
        state: present
        regexp: '# Slack API key'
        line: "    api_key: '{{ chacal.ha.slack.homebot.api_key }}'  # Slack API key"
      register: conf_file

    - name: Copy devicesfile
      copy: dest=/home/homeassistant/.homeassistant/known_devices.yaml.yaml src=./conf/ha-known_devices.yaml owner=homeassistant
      register: devices_file

    - name: Enable service and start it
      systemd: name=home-assistant daemon_reload=yes state=restarted enabled=yes
      when: (unit_file is defined and unit_file.changed) or (conf_file is defined and conf_file.changed) or (devices_file is defined and devices_file.changed)

    # Need to install Mosquitto manually (not by role) as ha-opi is Ubuntu, not Debian
    - name: Mosquitto config file
      copy:
        dest: /etc/mosquitto/conf.d/custom.conf
        content: |
          autosave_interval 60
          max_queued_messages 500000

          listener 1883

          listener 8883
          protocol websockets

          connection netserver
          address mqtt.netserver.chacal.fi:8883
          topic /sensor/# out 1 "" ""
          remote_username {{ chacal.netserver.mqtt_users[0].username }}
          remote_password {{ chacal.netserver.mqtt_users[0].password }}
          bridge_tls_version tlsv1.2
          bridge_capath /etc/ssl/certs
      register: mosquitto_conf_file

    - name: Create own Mosquitto unit file
      copy:
        dest: /etc/systemd/system/mosquitto.service
        content: |
          [Unit]
          Description=Mosquitto MQTT broker

          [Service]
          User=mosquitto
          Group=mosquitto
          Type=simple
          ExecStart=/usr/sbin/mosquitto -c /etc/mosquitto/mosquitto.conf
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=multi-user.target
      register: mosquitto_unit_file

    - name: Enable mosquitto and start it
      systemd: name=mosquitto daemon_reload=yes state=restarted enabled=yes
      when: (mosquitto_unit_file is defined and mosquitto_unit_file.changed) or (mosquitto_conf_file is defined and mosquitto_conf_file.changed)

    - name: Clear MQTT events from HA DB periodically
      cron:
        name: Clear MQTT events periodically
        job: psql ha -c "delete from events where event_type = 'mqtt_message_received' and time_fired < now() - interval '5 minutes';"
        user: postgres


# Diff to original dtb file in order to enable 1,2GHz CPU frequency
# 51c51
#  < 			operating-points = <0x124f80 0x13d620 0xf6180 0x13d620 0xc7380 0x10c8e0 0x98580 0x10c8e0 0x75300 0x10c8e0 0x4c2c0 0x10c8e0 0x3a980 0x10c8e0 0x1d4c0 0x10c8e0>;
#  ---
#  > 			operating-points = <0xf6180 0x13d620 0xc7380 0x10c8e0 0x98580 0x10c8e0 0x75300 0x10c8e0 0x4c2c0 0x10c8e0 0x3a980 0x10c8e0 0x1d4c0 0x10c8e0>;
#
# 1) dtc -I dtb -O dts /boot/dtb/sun8i-h2plus-orangepi-zero.dtb > sun8i-h2plus-orangepi-zero.dts
# 2) edit sun8i-h2plus-orangepi-zero.dts
# 3) dtc -I dts -O dtb sun8i-h2plus-orangepi-zero.dts > /boot/dtb/sun8i-h2plus-orangepi-zero.dtb
